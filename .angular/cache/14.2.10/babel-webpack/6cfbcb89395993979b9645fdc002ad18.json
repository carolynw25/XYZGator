{"ast":null,"code":"import { ElementRef } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nconst _c0 = [\"table\"];\n\nfunction WordSearchComponent_tr_4_td_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const letter_r5 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", letter_r5, \" \");\n  }\n}\n\nfunction WordSearchComponent_tr_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtemplate(1, WordSearchComponent_tr_4_td_1_Template, 2, 1, \"td\", 2);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const row_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", row_r3);\n  }\n}\n\nconst _c1 = function (a0, a1) {\n  return {\n    \"selected\": a0,\n    \"found\": a1\n  };\n};\n\nfunction WordSearchComponent_li_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\", 4);\n    i0.ɵɵlistener(\"click\", function WordSearchComponent_li_8_Template_li_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const word_r6 = restoredCtx.$implicit;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.selectWord(word_r6));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const word_r6 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(2, _c1, ctx_r2.isWordSelected(word_r6), ctx_r2.grid.flat().join(\"\").includes(word_r6)));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.selectedWord, \" \");\n  }\n}\n\nexport let WordSearchComponent = /*#__PURE__*/(() => {\n  class WordSearchComponent {\n    constructor() {\n      this.words = ['Angular', 'JavaScript', 'HTML', 'CSS'];\n      this.grid = [['A', 'N', 'G', 'U', 'L', 'A', 'R', 'I', 'W', 'E', 'B'], ['J', 'A', 'V', 'A', 'S', 'C', 'R', 'I', 'P', 'T', 'C'], ['H', 'T', 'M', 'L', 'A', 'R', 'A', 'S', 'E', 'E', 'R'], ['S', 'S', 'S', 'S', 'S', 'S', 'S', 'S', 'S', 'S', 'S'], ['C', 'E', 'L', 'T', 'I', 'C', 'S', 'S', 'S', 'S', 'S'], ['S', 'S', 'S', 'S', 'S', 'S', 'S', 'S', 'S', 'S', 'S']];\n      this.selectedWord = null;\n      this.selectedLetters = [];\n      this.mouseDown = false;\n    }\n\n    ngOnInit() {\n      this.table.nativeElement.addEventListener('mousedown', () => {\n        this.mouseDown = true;\n      });\n      this.table.nativeElement.addEventListener('mouseup', () => {\n        this.mouseDown = false;\n        this.checkWord();\n      });\n    }\n\n    selectLetter(row, col) {\n      if (!this.mouseDown) {\n        return;\n      }\n\n      const selectedLetter = {\n        row,\n        col\n      };\n\n      if (!this.selectedLetters.find(letter => letter.row === row && letter.col === col)) {\n        this.selectedLetters.push(selectedLetter);\n        this.selectedWord = this.getWord();\n      }\n    }\n\n    getWord() {\n      const letters = this.selectedLetters.sort((a, b) => a.row - b.row || a.col - b.col);\n      return letters.map(letter => this.grid[letter.row][letter.col]).join('');\n    }\n\n    checkWord() {\n      if (this.selectedWord) {\n        const foundWord = this.words.find(word => word === this.selectedWord);\n\n        if (foundWord) {\n          alert(`Found word: ${foundWord}`);\n        } else {\n          alert(`Sorry, the selected word \"${this.selectedWord}\" was not found.`);\n        }\n\n        this.selectedWord = null;\n        this.selectedLetters = [];\n      }\n    }\n\n  }\n\n  WordSearchComponent.ɵfac = function WordSearchComponent_Factory(t) {\n    return new (t || WordSearchComponent)();\n  };\n\n  WordSearchComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: WordSearchComponent,\n    selectors: [[\"app-word-search\"]],\n    viewQuery: function WordSearchComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.table = _t.first);\n      }\n    },\n    decls: 9,\n    vars: 2,\n    consts: [[1, \"outer\"], [\"table\", \"\"], [4, \"ngFor\", \"ngForOf\"], [3, \"ngClass\", \"click\", 4, \"ngFor\", \"ngForOf\"], [3, \"ngClass\", \"click\"]],\n    template: function WordSearchComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"table\", null, 1)(3, \"tbody\");\n        i0.ɵɵtemplate(4, WordSearchComponent_tr_4_Template, 2, 1, \"tr\", 2);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(5, \"p\");\n        i0.ɵɵtext(6, \"Find the following words:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"ul\");\n        i0.ɵɵtemplate(8, WordSearchComponent_li_8_Template, 2, 5, \"li\", 3);\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.grid);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.words);\n      }\n    },\n    dependencies: [i1.NgClass, i1.NgForOf],\n    styles: [\".outer[_ngcontent-%COMP%]{padding:20px;min-height:100vh;background-color:#e6e6fa}table[_ngcontent-%COMP%]{border-collapse:collapse}td[_ngcontent-%COMP%]{width:30px;height:30px;border:1px solid black;text-align:center;font-size:20px;font-weight:700}li[_ngcontent-%COMP%]{display:inline-block;margin-right:10px;font-weight:700}\"]\n  });\n  return WordSearchComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}