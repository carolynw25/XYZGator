{"ast":null,"code":"import _asyncToGenerator from \"/Users/carolynwang/XYZGatorGit/CEN3031Proj/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { TestBed } from '@angular/core/testing';\nimport { By } from '@angular/platform-browser';\nimport { NavbarComponent } from './navbar.component';\ndescribe('NavbarComponent', () => {\n  let component;\n  let fixture;\n  let debugElement;\n  let htmlElement;\n  beforeEach( /*#__PURE__*/_asyncToGenerator(function* () {\n    yield TestBed.configureTestingModule({\n      declarations: [NavbarComponent]\n    }).compileComponents();\n  }));\n  beforeEach(() => {\n    fixture = TestBed.createComponent(NavbarComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n    debugElement = fixture.debugElement;\n    htmlElement = debugElement.nativeElement;\n  });\n  it('should create the component', () => {\n    expect(component).toBeTruthy();\n  });\n  it('should have a navbar with a title', () => {\n    const title = component.getTitle();\n    const navbarBrand = debugElement.query(By.css('.navbar-brand')).nativeElement;\n    expect(navbarBrand.textContent).toContain(title);\n  });\n  it('should collapse the search form when navbar-toggler is clicked', () => {\n    component.isCollapsed = false;\n    fixture.detectChanges();\n    const searchForm = debugElement.query(By.css('.collapse .input-group')).nativeElement;\n    expect(searchForm.classList).not.toContain('show');\n    const navbarToggler = debugElement.query(By.css('.navbar-toggler')).nativeElement;\n    navbarToggler.click();\n    fixture.detectChanges();\n    expect(searchForm.classList).toContain('show');\n  });\n  it('should have a button to toggle the sidebar', () => {\n    const navbarToggle = debugElement.query(By.css('.navbar-toggle')).nativeElement;\n    expect(navbarToggle).toBeTruthy();\n  });\n  it('should have a bell icon to access account notifications', () => {\n    const bellIcon = debugElement.query(By.css('.nc-bell-55')).nativeElement;\n    expect(bellIcon).toBeTruthy();\n  });\n  it('should have a cog icon to access account settings', () => {\n    const cogIcon = debugElement.query(By.css('.nc-settings-gear-65')).nativeElement;\n    expect(cogIcon).toBeTruthy();\n  });\n});","map":{"version":3,"mappings":";AAAA,SAASA,OAAT,QAA0C,uBAA1C;AACA,SAASC,EAAT,QAAmB,2BAAnB;AAGA,SAASC,eAAT,QAAgC,oBAAhC;AAEAC,QAAQ,CAAC,iBAAD,EAAoB,MAAK;EAC/B,IAAIC,SAAJ;EACA,IAAIC,OAAJ;EACA,IAAIC,YAAJ;EACA,IAAIC,WAAJ;EAEAC,UAAU,iCAAC,aAAW;IACpB,MAAMR,OAAO,CAACS,sBAAR,CAA+B;MACnCC,YAAY,EAAE,CAAER,eAAF;IADqB,CAA/B,EAGLS,iBAHK,EAAN;EAID,CALS,EAAV;EAOAH,UAAU,CAAC,MAAK;IACdH,OAAO,GAAGL,OAAO,CAACY,eAAR,CAAwBV,eAAxB,CAAV;IACAE,SAAS,GAAGC,OAAO,CAACQ,iBAApB;IACAR,OAAO,CAACS,aAAR;IACAR,YAAY,GAAGD,OAAO,CAACC,YAAvB;IACAC,WAAW,GAAGD,YAAY,CAACS,aAA3B;EACD,CANS,CAAV;EAQAC,EAAE,CAAC,6BAAD,EAAgC,MAAK;IACrCC,MAAM,CAACb,SAAD,CAAN,CAAkBc,UAAlB;EACD,CAFC,CAAF;EAIAF,EAAE,CAAC,mCAAD,EAAsC,MAAK;IAC3C,MAAMG,KAAK,GAAGf,SAAS,CAACgB,QAAV,EAAd;IACA,MAAMC,WAAW,GAAGf,YAAY,CAACgB,KAAb,CAAmBrB,EAAE,CAACsB,GAAH,CAAO,eAAP,CAAnB,EAA4CR,aAAhE;IACAE,MAAM,CAACI,WAAW,CAACG,WAAb,CAAN,CAAgCC,SAAhC,CAA0CN,KAA1C;EACD,CAJC,CAAF;EAQAH,EAAE,CAAC,gEAAD,EAAmE,MAAK;IACxEZ,SAAS,CAACsB,WAAV,GAAwB,KAAxB;IACArB,OAAO,CAACS,aAAR;IACA,MAAMa,UAAU,GAAGrB,YAAY,CAACgB,KAAb,CAAmBrB,EAAE,CAACsB,GAAH,CAAO,wBAAP,CAAnB,EAAqDR,aAAxE;IACAE,MAAM,CAACU,UAAU,CAACC,SAAZ,CAAN,CAA6BC,GAA7B,CAAiCJ,SAAjC,CAA2C,MAA3C;IACA,MAAMK,aAAa,GAAGxB,YAAY,CAACgB,KAAb,CAAmBrB,EAAE,CAACsB,GAAH,CAAO,iBAAP,CAAnB,EAA8CR,aAApE;IACAe,aAAa,CAACC,KAAd;IACA1B,OAAO,CAACS,aAAR;IACAG,MAAM,CAACU,UAAU,CAACC,SAAZ,CAAN,CAA6BH,SAA7B,CAAuC,MAAvC;EACD,CATC,CAAF;EAWAT,EAAE,CAAC,4CAAD,EAA+C,MAAK;IACpD,MAAMgB,YAAY,GAAG1B,YAAY,CAACgB,KAAb,CAAmBrB,EAAE,CAACsB,GAAH,CAAO,gBAAP,CAAnB,EAA6CR,aAAlE;IACAE,MAAM,CAACe,YAAD,CAAN,CAAqBd,UAArB;EACD,CAHC,CAAF;EAKAF,EAAE,CAAC,yDAAD,EAA4D,MAAK;IACjE,MAAMiB,QAAQ,GAAG3B,YAAY,CAACgB,KAAb,CAAmBrB,EAAE,CAACsB,GAAH,CAAO,aAAP,CAAnB,EAA0CR,aAA3D;IACAE,MAAM,CAACgB,QAAD,CAAN,CAAiBf,UAAjB;EACD,CAHC,CAAF;EAKAF,EAAE,CAAC,mDAAD,EAAsD,MAAK;IAC3D,MAAMkB,OAAO,GAAG5B,YAAY,CAACgB,KAAb,CAAmBrB,EAAE,CAACsB,GAAH,CAAO,sBAAP,CAAnB,EAAmDR,aAAnE;IACAE,MAAM,CAACiB,OAAD,CAAN,CAAgBhB,UAAhB;EACD,CAHC,CAAF;AAID,CA1DO,CAAR","names":["TestBed","By","NavbarComponent","describe","component","fixture","debugElement","htmlElement","beforeEach","configureTestingModule","declarations","compileComponents","createComponent","componentInstance","detectChanges","nativeElement","it","expect","toBeTruthy","title","getTitle","navbarBrand","query","css","textContent","toContain","isCollapsed","searchForm","classList","not","navbarToggler","click","navbarToggle","bellIcon","cogIcon"],"sourceRoot":"","sources":["/Users/carolynwang/XYZGatorGit/CEN3031Proj/src/app/shared/navbar/navbar.component.spec.ts"],"sourcesContent":["import { TestBed, ComponentFixture } from '@angular/core/testing';\nimport { By } from '@angular/platform-browser';\nimport { DebugElement } from '@angular/core';\n\nimport { NavbarComponent } from './navbar.component';\n\ndescribe('NavbarComponent', () => {\n  let component: NavbarComponent;\n  let fixture: ComponentFixture<NavbarComponent>;\n  let debugElement: DebugElement;\n  let htmlElement: HTMLElement;\n\n  beforeEach(async () => {\n    await TestBed.configureTestingModule({\n      declarations: [ NavbarComponent ]\n    })\n    .compileComponents();\n  });\n\n  beforeEach(() => {\n    fixture = TestBed.createComponent(NavbarComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n    debugElement = fixture.debugElement;\n    htmlElement = debugElement.nativeElement;\n  });\n\n  it('should create the component', () => {\n    expect(component).toBeTruthy();\n  });\n\n  it('should have a navbar with a title', () => {\n    const title = component.getTitle();\n    const navbarBrand = debugElement.query(By.css('.navbar-brand')).nativeElement;\n    expect(navbarBrand.textContent).toContain(title);\n  });\n\n\n\n  it('should collapse the search form when navbar-toggler is clicked', () => {\n    component.isCollapsed = false;\n    fixture.detectChanges();\n    const searchForm = debugElement.query(By.css('.collapse .input-group')).nativeElement;\n    expect(searchForm.classList).not.toContain('show');\n    const navbarToggler = debugElement.query(By.css('.navbar-toggler')).nativeElement;\n    navbarToggler.click();\n    fixture.detectChanges();\n    expect(searchForm.classList).toContain('show');\n  });\n\n  it('should have a button to toggle the sidebar', () => {\n    const navbarToggle = debugElement.query(By.css('.navbar-toggle')).nativeElement;\n    expect(navbarToggle).toBeTruthy();\n  });\n\n  it('should have a bell icon to access account notifications', () => {\n    const bellIcon = debugElement.query(By.css('.nc-bell-55')).nativeElement;\n    expect(bellIcon).toBeTruthy();\n  });\n\n  it('should have a cog icon to access account settings', () => {\n    const cogIcon = debugElement.query(By.css('.nc-settings-gear-65')).nativeElement;\n    expect(cogIcon).toBeTruthy();\n  });\n});\n"]},"metadata":{},"sourceType":"module"}