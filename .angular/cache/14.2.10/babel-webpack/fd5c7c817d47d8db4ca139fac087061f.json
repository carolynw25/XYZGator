{"ast":null,"code":"import { __decorate, __metadata } from \"tslib\";\nimport { Component, ElementRef, ViewChild } from '@angular/core';\nlet WordSearchComponent = class WordSearchComponent {\n  constructor() {\n    this.words = ['Angular', 'JavaScript', 'HTML', 'CSS'];\n    this.grid = [['A', 'N', 'G', 'U', 'L', 'A', 'R', 'I', 'W', 'E', 'B'], ['J', 'A', 'V', 'A', 'S', 'C', 'R', 'I', 'P', 'T', 'C'], ['H', 'T', 'M', 'L', 'A', 'R', 'A', 'S', 'E', 'E', 'R'], ['S', 'S', 'S', 'S', 'S', 'S', 'S', 'S', 'S', 'S', 'S'], ['C', 'E', 'L', 'T', 'I', 'C', 'S', 'S', 'S', 'S', 'S'], ['S', 'S', 'S', 'S', 'S', 'S', 'S', 'S', 'S', 'S', 'S']];\n    this.selectedWord = null;\n    this.selectedLetters = [];\n    this.mouseDown = false;\n  }\n\n  ngOnInit() {\n    this.table.nativeElement.addEventListener('mousedown', () => {\n      this.mouseDown = true;\n    });\n    this.table.nativeElement.addEventListener('mouseup', () => {\n      this.mouseDown = false;\n      this.checkSelectedWord();\n    });\n  }\n\n  selectLetter(row, col) {\n    if (!this.mouseDown) {\n      return;\n    }\n\n    const selectedLetter = {\n      row,\n      col\n    };\n\n    if (!this.selectedLetters.find(letter => letter.row === row && letter.col === col)) {\n      this.selectedLetters.push(selectedLetter);\n      this.selectedWord = this.getWordFromSelectedLetters();\n    }\n  }\n\n  getWordFromSelectedLetters() {\n    const letters = this.selectedLetters.sort((a, b) => a.row - b.row || a.col - b.col);\n    return letters.map(letter => this.grid[letter.row][letter.col]).join('');\n  }\n\n  checkSelectedWord() {\n    if (this.selectedWord) {\n      const foundWord = this.words.find(word => word === this.selectedWord);\n\n      if (foundWord) {\n        alert(`Found word: ${foundWord}`);\n      } else {\n        alert(`Sorry, the selected word \"${this.selectedWord}\" was not found.`);\n      }\n\n      this.selectedWord = null;\n      this.selectedLetters = [];\n    }\n  }\n\n};\n\n__decorate([ViewChild('table'), __metadata(\"design:type\", ElementRef)], WordSearchComponent.prototype, \"table\", void 0);\n\nWordSearchComponent = __decorate([Component({\n  selector: 'app-word-search',\n  template: `\n<div class =\"outer\">\n  <table (mouseup)>\n    <tbody>\n      <tr *ngFor=\"let row of grid\">\n        <td\n          *ngFor=\"let letter of row\"\n          (mousedown)=\"selectWord(selectedWord === null ? letter : selectedWord + letter)\"\n          [ngClass]=\"{ 'selected': isWordSelected(selectedWord), 'found': words.includes(selectedWord) }\"\n        >\n          {{ letter }}\n        </td>\n      </tr>\n    </tbody>\n  </table>\n\n  <p>Find the following words:</p>\n  <ul>\n    <li\n      *ngFor=\"let word of words\"\n      [ngClass]=\"{ 'selected': isWordSelected(word), 'found': grid.flat().join('').includes(word) }\"\n      (click)=\"selectWord(word)\"\n    >\n      {{ word }}\n    </li>\n  </ul>\n</div>\n `,\n  styles: [`\n  .outer {\n    padding: 20px;\n    min-height: 100vh;\n    background-color: lavender;\n  }\n  table {\n    border-collapse: collapse;\n  }\n\n  td {\n    width: 30px;\n    height: 30px;\n    border: 1px solid black;\n    text-align: center;\n    font-size: 20px;\n    font-weight: bold;\n  }\n\n  li {\n    display: inline-block;\n    margin-right: 10px;\n    font-weight: bold;\n  }\n  `]\n}), __metadata(\"design:paramtypes\", [])], WordSearchComponent);\nexport { WordSearchComponent };","map":null,"metadata":{},"sourceType":"module"}