{"ast":null,"code":"// What they had before\n// import { HttpClient } from '@angular/common/http';\n// import { Injectable } from '@angular/core';\n// @Injectable({\n//   providedIn: 'root'\n// })\n// export class RestapiService {\n//   constructor(private http:HttpClient) { }\n//   GetAllUsers(){\n//     return this.http.get(\"http://localhost:3000/users\");\n//   }\n// }\n// Attempt to connect to API\nimport { HttpClient } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let UserService = /*#__PURE__*/(() => {\n  class UserService {\n    constructor(http) {\n      this.http = http;\n      this.apiEndpoint = 'http://128.227.1.31:8080/api/login';\n    } // getUsers() {\n    //   return this.http.get('$(this.apiEndpoint}/users');\n\n\n    getUser(userId) {\n      return this.http.get('$(this.apiEndpoint}/userId'); //return this.http.get(`/api/users/${userId}`);\n    }\n\n  }\n\n  UserService.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  UserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n  return UserService;\n})();\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(http) {\n      this.http = http;\n      this.apiEndpoint = 'http://128.227.1.31:8080/api';\n    }\n\n    login(username, password) {\n      return this.http.post('$(this.apiEndpoint}/users', {\n        username,\n        password\n      });\n    }\n\n  }\n\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module"}