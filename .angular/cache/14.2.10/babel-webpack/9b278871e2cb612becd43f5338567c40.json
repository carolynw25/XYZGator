{"ast":null,"code":"import Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\n\nfunction CardComponent_div_8_h2_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h2\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const card_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(card_r1.color);\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    \"background-color\": a0\n  };\n};\n\nfunction CardComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵlistener(\"click\", function CardComponent_div_8_Template_div_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const card_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.flipCard(card_r1));\n    });\n    i0.ɵɵelementStart(1, \"div\", 7);\n    i0.ɵɵtemplate(2, CardComponent_div_8_h2_2_Template, 2, 1, \"h2\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 9);\n    i0.ɵɵelement(4, \"div\", 10)(5, \"div\", 11);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const card_r1 = ctx.$implicit;\n    i0.ɵɵclassProp(\"flipped\", card_r1.isFlipped);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(4, _c0, !card_r1.isFlipped ? card_r1.color : \"\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", card_r1.isFlipped);\n  }\n}\n\nexport let CardComponent = /*#__PURE__*/(() => {\n  class CardComponent {\n    constructor() {\n      this.cards = [];\n      this.disableCards = false;\n      this.minutes = 0;\n      this.seconds = 0;\n      const cardColors = ['red', 'green', 'blue', 'yellow', 'orange', 'black', 'purple', 'violet', 'gray', 'lime', 'white', 'teal', 'pink', 'brown'];\n      const uniqueCards = []; //start timer\n\n      this.stopTimer();\n      this.startTimer(); // Generate unique pairs of cards\n\n      for (let i = 1; i <= cardColors.length; i++) {\n        const color = cardColors[i - 1];\n        const card1 = {\n          id: i * 2 - 1,\n          color,\n          isFlipped: false,\n          isMatched: false\n        };\n        const card2 = {\n          id: i * 2,\n          color,\n          isFlipped: false,\n          isMatched: false\n        };\n        uniqueCards.push(card1, card2);\n      } // Shuffle cards\n\n\n      this.cards = this.shuffle(uniqueCards);\n    }\n\n    flipCard(card) {\n      if (!card.isMatched && !this.disableCards) {\n        card.isFlipped = !card.isFlipped;\n        const flippedCards = this.cards.filter(c => c.isFlipped && !c.isMatched);\n\n        if (flippedCards.length === 2) {\n          if (flippedCards[0].color === flippedCards[1].color) {\n            flippedCards.forEach(c => c.isMatched = true);\n\n            if (this.cards.every(card => card.isMatched)) {\n              // Show win popup with time here\n              clearInterval(this.timer);\n              setTimeout(() => {\n                Swal.fire({\n                  title: 'Congratulations, you won!',\n                  text: `You won in ${this.minutes}:${this.seconds < 10 ? '0' : ''}${this.seconds}!`,\n                  icon: 'success',\n                  confirmButtonColor: '#3085d6',\n                  confirmButtonText: 'OK',\n                  padding: '3em',\n                  color: '#716add',\n                  background: '#fff url(/images/trees.png)',\n                  backdrop: `\n                  rgba(0,0,123,0.4)\n                  url(\"/images/nyan-cat.gif\")\n                  left top\n                  no-repeat\n                `\n                });\n              }, 1000);\n            }\n          } else {\n            this.disableCards = true;\n            setTimeout(() => {\n              flippedCards.forEach(c => c.isFlipped = false);\n              this.disableCards = false;\n            }, 1000);\n          }\n        }\n      }\n    }\n\n    shuffle(array) {\n      let currentIndex = array.length,\n          randomIndex;\n\n      while (currentIndex != 0) {\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex--;\n        [array[currentIndex], array[randomIndex]] = [array[randomIndex], array[currentIndex]];\n      }\n\n      return array;\n    }\n\n    reset() {\n      this.cards.forEach(card => {\n        card.isFlipped = false;\n        card.isMatched = false;\n      });\n      this.cards = this.shuffle(this.cards);\n      this.disableCards = false;\n      this.stopTimer();\n      this.startTimer();\n    }\n\n    startTimer() {\n      this.timer = setInterval(() => {\n        if (this.seconds < 59) {\n          this.seconds++;\n        } else {\n          this.minutes++;\n          this.seconds = 0;\n        }\n      }, 1000);\n    }\n\n    stopTimer() {\n      clearInterval(this.timer);\n      this.minutes = 0;\n      this.seconds = 0;\n    }\n\n  }\n\n  CardComponent.ɵfac = function CardComponent_Factory(t) {\n    return new (t || CardComponent)();\n  };\n\n  CardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CardComponent,\n    selectors: [[\"app-card\"]],\n    decls: 9,\n    vars: 6,\n    consts: [[1, \"outer\"], [1, \"top-bar\"], [3, \"click\"], [1, \"timer\"], [1, \"cards\"], [\"class\", \"card\", 3, \"flipped\", \"ngStyle\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"card\", 3, \"ngStyle\", \"click\"], [1, \"card-content\"], [4, \"ngIf\"], [1, \"card-inner\"], [1, \"card-front\"], [1, \"card-back\"]],\n    template: function CardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function CardComponent_Template_button_click_2_listener() {\n          return ctx.reset();\n        });\n        i0.ɵɵtext(3, \"Reset\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 3);\n        i0.ɵɵtext(5);\n        i0.ɵɵpipe(6, \"number\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"div\", 4);\n        i0.ɵɵtemplate(8, CardComponent_div_8_Template, 6, 6, \"div\", 5);\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate2(\"\", ctx.minutes, \":\", i0.ɵɵpipeBind2(6, 3, ctx.seconds, \"2.0\"), \"\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.cards);\n      }\n    },\n    dependencies: [i1.NgForOf, i1.NgIf, i1.NgStyle, i1.DecimalPipe],\n    styles: [\".outer[_ngcontent-%COMP%]{padding:20px;min-height:100vh;background-color:#e6e6fa}.cards[_ngcontent-%COMP%]{display:grid;grid-template-columns:repeat(auto-fit,minmax(170px,1fr));grid-gap:5px;gap:5px;margin:200px 20px 20px}.card[_ngcontent-%COMP%]{width:150px;height:150px;position:relative;perspective:1000px;cursor:pointer;background-color:#f3f2ef}.card-inner[_ngcontent-%COMP%]{position:absolute;width:100%;height:100%;transform-style:preserve-3d;transition:transform .5s}.card-front[_ngcontent-%COMP%], .card-back[_ngcontent-%COMP%]{position:absolute;top:0;left:0;width:100%;height:100%;-webkit-backface-visibility:hidden;backface-visibility:hidden;transform-style:preserve-3d;transition:all .5s ease-in-out}.card-front[_ngcontent-%COMP%]{transform:rotateY(0);z-index:2}.card-back[_ngcontent-%COMP%]{transform:rotateY(180deg);z-index:1}.card.flipped[_ngcontent-%COMP%]   .card-inner[_ngcontent-%COMP%]{transform:rotateY(180deg)}.card.flipped[_ngcontent-%COMP%]   .card-front[_ngcontent-%COMP%]{z-index:1}.card.flipped[_ngcontent-%COMP%]   .card-back[_ngcontent-%COMP%]{transform:rotateY(0);z-index:2}.card-content[_ngcontent-%COMP%]{padding:0rem;position:relative;z-index:1}.card-content[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{background-color:#f3f2ef;color:#000;text-align:center;padding:.07rem;font-size:1.5rem;margin-bottom:.5rem}.card-front[_ngcontent-%COMP%]:before, .card-back[_ngcontent-%COMP%]:before{content:\\\"\\\";position:absolute;top:0;left:0;width:100%;height:100%;box-shadow:0 2px 10px #0000004d;z-index:-1;transition:all .5s ease-in-out}.card-front[_ngcontent-%COMP%]:before{transform:translateZ(-5px)}.card-back[_ngcontent-%COMP%]:before{transform:translateZ(5px)}\"]\n  });\n  return CardComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}