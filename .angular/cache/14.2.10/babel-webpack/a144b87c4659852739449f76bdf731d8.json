{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\n\nconst _c0 = function (a0, a1) {\n  return {\n    \"selected\": a0,\n    \"found\": a1\n  };\n};\n\nfunction WordSearchComponent_tr_3_td_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"td\", 4);\n    i0.ɵɵlistener(\"mousedown\", function WordSearchComponent_tr_3_td_1_Template_td_mousedown_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const letter_r3 = restoredCtx.$implicit;\n      const colIdx_r4 = restoredCtx.index;\n      const ctx_r5 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r5.selectWord(letter_r3, ctx_r5.i, colIdx_r4));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const letter_r3 = ctx.$implicit;\n    const colIdx_r4 = ctx.index;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(2, _c0, ctx_r2.isLetterSelected(ctx_r2.i, colIdx_r4), ctx_r2.words.includes(ctx_r2.getSelectedWord())));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", letter_r3, \" \");\n  }\n}\n\nfunction WordSearchComponent_tr_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtemplate(1, WordSearchComponent_tr_3_td_1_Template, 2, 5, \"td\", 3);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const row_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", row_r1);\n  }\n}\n\nexport let WordSearchComponent = /*#__PURE__*/(() => {\n  class WordSearchComponent {\n    constructor() {\n      this.words = ['Angular', 'TypeScript', 'JavaScript', 'HTML', 'CSS'];\n      this.grid = [];\n    }\n\n    generateGrid() {\n      // Generate an empty grid of letters\n      for (let i = 0; i < 10; i++) {\n        this.grid.push([]);\n\n        for (let j = 0; j < 10; j++) {\n          this.grid[i].push('');\n        }\n      } // Place the words in the grid\n\n\n      for (const word of this.words) {\n        // Generate a random starting position and direction for the word\n        const startX = Math.floor(Math.random() * 10);\n        const startY = Math.floor(Math.random() * 10);\n        const directionX = Math.floor(Math.random() * 3) - 1;\n        const directionY = Math.floor(Math.random() * 3) - 1; // Place the word in the grid (if possible)\n\n        let x = startX;\n        let y = startY;\n        let canPlace = true;\n\n        for (const letter of word) {\n          if (x < 0 || x >= 10 || y < 0 || y >= 10 || this.grid[y][x] !== '' && this.grid[y][x] !== letter) {\n            canPlace = false;\n            break;\n          }\n\n          x += directionX;\n          y += directionY;\n        }\n\n        if (canPlace) {\n          x = startX;\n          y = startY;\n\n          for (const letter of word) {\n            this.grid[y][x] = letter;\n            x += directionX;\n            y += directionY;\n          }\n        }\n      } // Fill the remaining empty spaces with random letters\n\n\n      const letters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\n      for (let i = 0; i < 10; i++) {\n        for (let j = 0; j < 10; j++) {\n          if (this.grid[i][j] === '') {\n            const randomLetter = letters.charAt(Math.floor(Math.random() * letters.length));\n            this.grid[i][j] = randomLetter;\n          }\n        }\n      }\n    }\n\n  }\n\n  WordSearchComponent.ɵfac = function WordSearchComponent_Factory(t) {\n    return new (t || WordSearchComponent)();\n  };\n\n  WordSearchComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: WordSearchComponent,\n    selectors: [[\"app-word-search\"]],\n    decls: 4,\n    vars: 1,\n    consts: [[1, \"outer\"], [3, \"mouseup\"], [4, \"ngFor\", \"ngForOf\"], [3, \"ngClass\", \"mousedown\", 4, \"ngFor\", \"ngForOf\"], [3, \"ngClass\", \"mousedown\"]],\n    template: function WordSearchComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"table\", 1);\n        i0.ɵɵlistener(\"mouseup\", function WordSearchComponent_Template_table_mouseup_1_listener() {\n          return ctx.onMouseUp();\n        });\n        i0.ɵɵelementStart(2, \"tbody\");\n        i0.ɵɵtemplate(3, WordSearchComponent_tr_3_Template, 2, 1, \"tr\", 2);\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.grid);\n      }\n    },\n    dependencies: [i1.NgClass, i1.NgForOf],\n    styles: [\".outer[_ngcontent-%COMP%]{padding:20px;min-height:100vh;background-color:#e6e6fa}table[_ngcontent-%COMP%]{border-collapse:collapse}td[_ngcontent-%COMP%]{width:30px;height:30px;border:1px solid black;text-align:center;font-size:20px;font-weight:700}li[_ngcontent-%COMP%]{display:inline-block;margin-right:10px;font-weight:700}\"]\n  });\n  return WordSearchComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}