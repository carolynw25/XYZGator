{"ast":null,"code":"import { FormBuilder } from \"@angular/forms\";\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { UserIdService } from 'app/userIdService';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"app/userIdService\"; //making it personalized\n//export let ID: any; // declare global variable\n\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(formBuilder, http, router, userIdService) {\n      this.formBuilder = formBuilder;\n      this.http = http;\n      this.router = router;\n      this.userIdService = userIdService; // @Input() errorMessage = ''\n      // @Output() onLogin: EventEmitter<AuthService(username: string, password: string )> = new EventEmitter()\n\n      this.username = '';\n      this.password = '';\n      this.userLogin = [{\n        username: 'fg',\n        password: 'gg'\n      }];\n    } //ID variable\n    //public ID: any;\n\n\n    ngOnInit() {\n      this.loginForm = this.formBuilder.group({\n        username: [''],\n        password: ['']\n      });\n    }\n\n    saveUserID(username, password) {\n      const url = 'http://127.0.0.1:8080/api/getID'; // replace with your actual API endpoint\n\n      const credentials = {\n        username,\n        password\n      };\n      this.http.post(url, credentials).subscribe(response => {\n        const userID = response.id; // Do something with the userID, such as storing it in a variable or using it to make another API request\n\n        this.userIdService.setUserId(userID);\n      }, error => {\n        console.error(error);\n      });\n    }\n\n    onSubmit() {\n      // this.onLogin.emit({\n      //   username: this.username, password: this.password\n      // })\n      const body = {\n        username: this.username,\n        password: this.password\n      }; //const options = {headers: new HttpHeaders({'Content-Type':'application/json'}) };\n\n      const headers = {\n        'Content-Type': 'application/json'\n      };\n      this.http.post('http://127.0.0.1:8080/api/login', body, {\n        headers\n      }).subscribe(response => {\n        this.saveUserID(this.username, this.password); // this.http.post('http://127.0.0.1:8080/api/getID', {}, {headers}).subscribe(\n        //   response => {\n        //     //this.ID = response['id'];\n        //     const id = response['id'];\n        //     localStorage.setItem('userID', id); // save the ID to localStorage\n        //     this.router.navigate(['/main']);\n        //   },\n        //   error => {\n        //     console.log(error);\n        //   }\n        // );\n        // If the login is successful, redirect the user to the dashboard page\n\n        this.router.navigate(['/main']); //document.write(\"Welcome to the Web Page!\");\n      }, error => {\n        // If the login is unsuccessful, display an error message\n        console.log(error); //this.router.navigate(['/main']);\n      });\n    }\n\n    checkData() {}\n\n  }\n\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.UserIdService));\n  };\n\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 26,\n    vars: 2,\n    consts: [[1, \"outer\"], [1, \"container\"], [1, \"row\"], [1, \"col-md-6\"], [1, \"card\"], [1, \"text-center\"], [1, \"mb-3\"], [\"for\", \"exampleInputEmail1\", 1, \"form-label\"], [\"id\", \"exampleInputEmail1\", \"aria-describedby\", \"emailHelp\", \"name\", \"username\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"exampleInputPassword1\", 1, \"form-label\"], [\"id\", \"exampleInputPassword1\", \"name\", \"password\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [\"routerLink\", \"/signup\", 2, \"color\", \"white\", \"margin-top\", \"10px\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"h1\");\n        i0.ɵɵtext(7, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"h6\");\n        i0.ɵɵtext(9, \"Please enter email & password !!\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"form\")(11, \"form\")(12, \"div\", 6)(13, \"label\", 7);\n        i0.ɵɵtext(14, \"Username\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"input\", 8);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_15_listener($event) {\n          return ctx.username = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"div\", 6)(17, \"label\", 9);\n        i0.ɵɵtext(18, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"input\", 10);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_19_listener($event) {\n          return ctx.password = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(20, \"button\", 11);\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_20_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵtext(21, \"Login\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(22, \"a\", 12);\n        i0.ɵɵtext(23, \"New user? Click to signup!!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"a\", 12);\n        i0.ɵɵtext(25, \"New user? Click to signup!!\");\n        i0.ɵɵelementEnd()()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(15);\n        i0.ɵɵproperty(\"ngModel\", ctx.username);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.password);\n      }\n    },\n    dependencies: [i3.RouterLinkWithHref, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.NgModel, i1.NgForm],\n    styles: [\".outer[_ngcontent-%COMP%]{height:100vh;background:rgba(87,10,125,.42)}.container[_ngcontent-%COMP%]{display:flex;margin:0 auto;max-width:500px}.card[_ngcontent-%COMP%]{display:flex;margin:0 auto;max-width:500px;border:none;width:500px;padding:40px;top:75%;left:100%;transform:translate(-50%,-50%);background:hsla(205,46%,30%,1);background:linear-gradient(90deg,hsla(205,46%,30%,1) 0%,hsla(260,29%,36%,1) 100%)}.card[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%], h6[_ngcontent-%COMP%], label[_ngcontent-%COMP%]{color:#fff}\"]\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}