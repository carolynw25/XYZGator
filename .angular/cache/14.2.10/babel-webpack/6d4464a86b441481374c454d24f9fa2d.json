{"ast":null,"code":"import { __decorate, __metadata } from \"tslib\";\nimport { Component } from '@angular/core';\nlet CardComponent = class CardComponent {\n  constructor() {\n    this.cards = [];\n    const cardColors = ['red', 'green', 'blue', 'yellow', 'orange', 'black', 'purple', 'violet', 'gray', 'azure', 'white', 'teal', 'pink', 'brown'];\n    const cardContents = ['Lorem ipsum dolor sit amet, consectetur adipiscing elit.', 'Fusce at massa at velit efficitur pulvinar.', 'Praesent mattis, ante sed ullamcorper efficitur, lorem erat tristique nisi.', 'Maecenas ac est vel erat bibendum tincidunt a eu lorem.', 'Suspendisse non lobortis velit, at bibendum lorem.'];\n    const uniqueCards = []; // Generate unique pairs of cards\n\n    for (let i = 1; i <= cardColors.length; i++) {\n      const content = cardContents[i - 1];\n      const color = cardColors[i - 1];\n      const card1 = {\n        id: i * 2 - 1,\n        content,\n        color,\n        isFlipped: false,\n        isMatched: false\n      };\n      const card2 = {\n        id: i * 2,\n        content,\n        color,\n        isFlipped: false,\n        isMatched: false\n      };\n      uniqueCards.push(card1, card2);\n    } // Shuffle cards\n\n\n    this.cards = this.shuffle(uniqueCards);\n  }\n\n  flipCard(card) {\n    if (!card.isMatched) {\n      card.isFlipped = !card.isFlipped;\n      const flippedCards = this.cards.filter(c => c.isFlipped && !c.isMatched);\n\n      if (flippedCards.length === 2) {\n        if (flippedCards[0].color === flippedCards[1].color) {\n          flippedCards.forEach(c => c.isMatched = true);\n        } else {\n          setTimeout(() => flippedCards.forEach(c => c.isFlipped = false), 1000);\n        }\n      }\n    }\n  }\n\n  shuffle(array) {\n    let currentIndex = array.length,\n        randomIndex;\n\n    while (currentIndex != 0) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n      [array[currentIndex], array[randomIndex]] = [array[randomIndex], array[currentIndex]];\n    }\n\n    return array;\n  }\n\n};\nCardComponent = __decorate([Component({\n  selector: 'app-card',\n  template: `\n   <div class=\"cards\">\n  <div class=\"card\" [class.flipped]=\"card.isFlipped\" *ngFor=\"let card of cards\" (click)=\"flipCard(card)\" *ngIf=\"cards.isFlipped\" [ngStyle]=\"{ 'background-color': card.color }\">\n    <div class=\"card-inner\">\n      <div class=\"card-front\">\n        <div class=\"card-content\">\n          <h2>{{ card.content }}</h2>\n        </div>\n      </div>\n      <div class=\"card-back\">\n        <div *ngIf=\"card.isFlipped\" [ngStyle]=\"{ 'background-color': card.color }\">\n          <h2>{{ card.content }} (Back)</h2>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n `,\n  styles: [`\n   .cards {\n     display: grid;\n     grid-template-columns: repeat(auto-fit, minmax(170px, 1fr));\n     gap: 1px;\n     margin: 1px;\n   }\n\n\n   .card {\n     width: 150px;\n     height: 150px;\n     position: relative;\n     perspective: 1000px;\n     cursor: pointer;\n   }\n\n\n   .card-inner {\n     position: absolute;\n     width: 100%;\n     height: 100%;\n     transform-style: preserve-3d;\n     transition: transform 0.5s;\n   }\n\n\n   .card-front,\n   .card-back {\n     position: absolute;\n     top: 0;\n     left: 0;\n     width: 100%;\n     height: 100%;\n     backface-visibility: hidden;\n     transform-style: preserve-3d;\n     transition: all 0.5s ease-in-out;\n   }\n\n\n   .card-front {\n     transform: rotateY(0deg);\n     z-index: 2;\n   }\n\n\n   .card-back {\n     transform: rotateY(180deg);\n     z-index: 1;\n   }\n\n\n   .card.flipped .card-inner {\n     transform: rotateY(180deg);\n   }\n\n\n   .card.flipped .card-front {\n     z-index: 1;\n   }\n\n\n   .card.flipped .card-back {\n     transform: rotateY(0deg);\n     z-index: 2;\n   }\n\n\n   .card-content {\n     padding: 1rem;\n     position: relative;\n     z-index: 1;\n   }\n\n\n   .card-content h2 {\n     font-size: 1.5rem;\n     margin-bottom: 0.5rem;\n   }\n\n\n   .card-content p {\n     font-size: 1rem;\n     line-height: 1.2;\n   }\n\n\n   /* Shadow effect */\n   .card-front::before,\n   .card-back::before {\n     content: \"\";\n     position: absolute;\n     top: 0;\n     left: 0;\n     width: 100%;\n     height: 100%;\n     box-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);\n     z-index: -1;\n     transition: all 0.5s ease-in-out;\n   }\n\n\n   .card-front::before {\n     transform: translateZ(-5px);\n   }\n\n\n   .card-back::before {\n     transform: translateZ(5px);\n   }\n `]\n}), __metadata(\"design:paramtypes\", [])], CardComponent);\nexport { CardComponent };","map":null,"metadata":{},"sourceType":"module"}