{"ast":null,"code":"import _asyncToGenerator from \"/Users/carolynwang/XYZGatorGit/CEN3031Proj/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { TestBed } from '@angular/core/testing';\nimport { LoginComponent } from './login.component';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\ndescribe('LoginComponent', () => {\n  let component;\n  let fixture;\n  beforeEach( /*#__PURE__*/_asyncToGenerator(function* () {\n    yield TestBed.configureTestingModule({\n      declarations: [LoginComponent],\n      imports: [ReactiveFormsModule, HttpClientModule, FormsModule]\n    }).compileComponents();\n    fixture = TestBed.createComponent(LoginComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  })); //checks if the SignupComponent instance is created successfully \n  //using the expect function. If the component is created successfully, \n  //the toBeTruthy matcher returns true, indicating that the component \n  //is truthy and exists.\n\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  }); //tests whether the username and password properties of the component are empty strings on initialization.\n\n  it('should have an empty username and password on initialization', () => {\n    expect(component.username).toEqual('');\n    expect(component.password).toEqual('');\n  });\n});","map":{"version":3,"mappings":";AAAA,SAA2BA,OAA3B,QAA0C,uBAA1C;AAEA,SAASC,cAAT,QAA+B,mBAA/B;AACA,SAASC,mBAAT,EAA8BC,WAA9B,QAAiD,gBAAjD;AACA,SAASC,gBAAT,QAAiC,sBAAjC;AAGAC,QAAQ,CAAC,gBAAD,EAAmB,MAAK;EAC9B,IAAIC,SAAJ;EACA,IAAIC,OAAJ;EAEAC,UAAU,iCAAC,aAAW;IACpB,MAAMR,OAAO,CAACS,sBAAR,CAA+B;MACnCC,YAAY,EAAE,CAAET,cAAF,CADqB;MAEnCU,OAAO,EAAE,CAAET,mBAAF,EAAuBE,gBAAvB,EAAyCD,WAAzC;IAF0B,CAA/B,EAILS,iBAJK,EAAN;IAMAL,OAAO,GAAGP,OAAO,CAACa,eAAR,CAAwBZ,cAAxB,CAAV;IACAK,SAAS,GAAGC,OAAO,CAACO,iBAApB;IACAP,OAAO,CAACQ,aAAR;EACD,CAVS,EAAV,CAJ8B,CAgB9B;EACA;EACA;EACA;;EACAC,EAAE,CAAC,eAAD,EAAkB,MAAK;IACvBC,MAAM,CAACX,SAAD,CAAN,CAAkBY,UAAlB;EACD,CAFC,CAAF,CApB8B,CAwB9B;;EACAF,EAAE,CAAC,8DAAD,EAAiE,MAAK;IACtEC,MAAM,CAACX,SAAS,CAACa,QAAX,CAAN,CAA2BC,OAA3B,CAAmC,EAAnC;IACAH,MAAM,CAACX,SAAS,CAACe,QAAX,CAAN,CAA2BD,OAA3B,CAAmC,EAAnC;EACD,CAHC,CAAF;AAID,CA7BO,CAAR","names":["TestBed","LoginComponent","ReactiveFormsModule","FormsModule","HttpClientModule","describe","component","fixture","beforeEach","configureTestingModule","declarations","imports","compileComponents","createComponent","componentInstance","detectChanges","it","expect","toBeTruthy","username","toEqual","password"],"sourceRoot":"","sources":["/Users/carolynwang/XYZGatorGit/CEN3031Proj/src/app/login/login.component.spec.ts"],"sourcesContent":["import { ComponentFixture, TestBed } from '@angular/core/testing';\n\nimport { LoginComponent } from './login.component';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\n\ndescribe('LoginComponent', () => {\n  let component: LoginComponent;\n  let fixture: ComponentFixture<LoginComponent>;\n\n  beforeEach(async () => {\n    await TestBed.configureTestingModule({\n      declarations: [ LoginComponent ],\n      imports: [ ReactiveFormsModule, HttpClientModule, FormsModule ]\n    })\n    .compileComponents();\n\n    fixture = TestBed.createComponent(LoginComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n\n  //checks if the SignupComponent instance is created successfully \n  //using the expect function. If the component is created successfully, \n  //the toBeTruthy matcher returns true, indicating that the component \n  //is truthy and exists.\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n\n  //tests whether the username and password properties of the component are empty strings on initialization.\n  it('should have an empty username and password on initialization', () => {\n    expect(component.username).toEqual('');\n    expect(component.password).toEqual('');\n  });\n});\n\n\n"]},"metadata":{},"sourceType":"module"}