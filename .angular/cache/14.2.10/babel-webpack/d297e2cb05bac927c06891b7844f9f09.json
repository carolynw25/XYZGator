{"ast":null,"code":"import { __decorate, __metadata } from \"tslib\";\nimport { Component } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nlet PictureGuessComponent = class PictureGuessComponent {\n  constructor() {}\n\n  ngOnInit() {}\n\n};\n\nPictureGuessComponent.ɵfac = function PictureGuessComponent_Factory(t) {\n  return new (t || PictureGuessComponent)();\n};\n\nPictureGuessComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PictureGuessComponent,\n  selectors: [[\"app-picture-guess\"]],\n  decls: 2,\n  vars: 0,\n  template: function PictureGuessComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"picture-guess works!\");\n      i0.ɵɵelementEnd();\n    }\n  }\n});\nPictureGuessComponent = __decorate([Component({\n  selector: 'app-card',\n  template: `\n <div class =\"outer\">\n   <div class=\"top-bar\">\n     <div class=\"lowestTime\">\n       <div *ngIf=\"lowestTime !== null\" class=\"lowest-time\"> lowestTime: {{ lowestTime.minutes }}:{{ lowestTime.seconds | number: '2.0' }}</div>\n       <div *ngIf=\"lowestTime == null\" class=\"lowest-time\"> lowestTime: </div>\n     </div>\n     <div class=\"reset\">\n       <button (click)=\"reset()\">Reset</button>\n     </div>\n     <div class=\"timer\"> timer: {{ minutes }}:{{ seconds | number: '2.0' }}</div>\n     <div class=\"return\">\n       <button routerLink=\"/notifications\">Return</button>\n     </div>\n   </div>\n   <div class=\"cards\">\n     <div class=\"card\" [class.flipped]=\"card.isFlipped\" *ngFor=\"let card of cards\" (click)=\"flipCard(card)\" [ngStyle]=\"{ 'background-color': card.isFlipped ? card.color : ''}\">\n       <div class=\"card-content\">\n         <h2 *ngIf=\"card.isFlipped\">{{ card.color }}</h2>\n       </div>\n       <div class=\"card-inner\">\n         <div class=\"card-front\">\n         </div>\n         <div class=\"card-back\" >\n         </div>\n       </div>\n     </div>\n   </div>\n </div>\n  `,\n  styles: [`\n     .outer {\n       padding: 20px;\n       min-height: 100vh;\n       background-color: lavender;\n     }\n     .top-bar {\n       display: flex;\n       align-items: center;\n       justify-content: space-between;\n     }\n     .lowestTime{\n       font-size: 2rem;\n       text-align: left;\n       justify-content: flex-start;\n     }\n     .timer {\n       font-size: 2rem;\n       text-align: left;\n       justify-content: flex-start;\n     }\n     .reset{\n       font-size: 2rem;\n       margin-right: 20px;\n       justify-content: center;\n     }\n     .return{\n       font-size: 2rem;\n       margin-right: 20px;\n       justify-content: flex-end;\n     }\n \n    .cards {\n      display: grid;\n      grid-template-columns: repeat(auto-fit, minmax(170px, 1fr));\n      gap: 1px;\n      margin: 50px;\n      margin-top: 40px;\n    }\n \n \n    .card {\n      width: 130px;\n      height: 130px;\n      position: relative;\n      perspective: 1000px;\n      cursor: pointer;\n      background-color: rgb(243, 242, 239);\n    }\n \n \n    .card-inner {\n      position: absolute;\n      width: 100%;\n      height: 100%;\n      transform-style: preserve-3d;\n      transition: transform 0.5s;\n    }\n \n \n    .card-front,\n    .card-back {\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      backface-visibility: hidden;\n      transform-style: preserve-3d;\n      transition: all 0.5s ease-in-out;\n    }\n \n \n    .card-front {\n      transform: rotateY(0deg);\n      z-index: 2;\n    }\n \n \n    .card-back {\n      transform: rotateY(180deg);\n      z-index: 1;\n    }\n \n \n    .card.flipped .card-inner {\n      transform: rotateY(180deg);\n    }\n \n \n    .card.flipped .card-front {\n      z-index: 1;\n    }\n \n \n    .card.flipped .card-back {\n      transform: rotateY(0deg);\n      z-index: 2;\n    }\n \n \n    .card-content {\n      padding: 0rem;\n      position: relative;\n      z-index: 1;\n    }\n \n    .card-content h2 {\n     background-color: rgb(243, 242, 239);\n     color: black;\n     text-align: center;\n     padding: 0.07rem;\n     font-size: 1.5rem;\n     margin-bottom: 0.5rem;\n    }\n \n    /* Shadow effect */\n    .card-front::before,\n    .card-back::before {\n      content: \"\";\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      box-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);\n      z-index: -1;\n      transition: all 0.5s ease-in-out;\n    }\n \n \n    .card-front::before {\n      transform: translateZ(-5px);\n    }\n \n \n    .card-back::before {\n      transform: translateZ(5px);\n    }\n  `]\n}), __metadata(\"design:paramtypes\", [])], PictureGuessComponent);\nexport { PictureGuessComponent };","map":null,"metadata":{},"sourceType":"module"}