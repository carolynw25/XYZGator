{"ast":null,"code":"import Chart from 'chart.js';\nimport { UserIdService } from 'app/userIdService';\nimport { HttpClient } from '@angular/common/http';\nimport { take } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"app/userIdService\";\nimport * as i2 from \"@angular/common/http\";\nexport let DashboardComponent = /*#__PURE__*/(() => {\n  class DashboardComponent {\n    constructor(userIDService, http) {\n      this.userIDService = userIDService;\n      this.http = http;\n      this.scoreMemory = 0;\n      this.scoreMath = 0;\n      this.scoreWord = 0;\n      this.scorePicture = 0;\n    }\n\n    getUserScoreMemory(ID) {\n      const url = 'http://127.0.0.1:8080/api/users/' + ID + '/matchscore';\n      return this.http.get(url);\n    }\n\n    getUserScoreMath(ID) {\n      const url = 'http://127.0.0.1:8080/api/users/' + ID + '/mathscore';\n      return this.http.get(url);\n    }\n\n    getUserScoreWord(ID) {\n      const url = 'http://127.0.0.1:8080/api/users/' + ID + '/wordscore';\n      return this.http.get(url);\n    }\n\n    getUserScorePicture(ID) {\n      const url = 'http://127.0.0.1:8080/api/users/' + ID + '/animalscore';\n      return this.http.get(url);\n    }\n\n    ngOnInit() {\n      this.userID = this.userIDService.getUserId();\n      console.log('User ID ohmygoditworked: ', this.userID); // Memory\n\n      this.getUserScoreMemory(this.userID).pipe(take(1) // take only the first value emitted by the observable\n      ).subscribe(score => {\n        if (score == 999999999999999) {\n          this.scoreMemory = null;\n        } else {\n          this.scoreMemory = score;\n        }\n      }); // Math\n\n      this.getUserScoreMath(this.userID).pipe(take(1) // take only the first value emitted by the observable\n      ).subscribe(score => {\n        this.scoreMath = score;\n\n        if (this.scoreMath < 0) {\n          this.scoreMath = 0;\n        }\n      }); // Word Search\n\n      this.getUserScoreWord(this.userID).pipe(take(1) // take only the first value emitted by the observable\n      ).subscribe(score => {\n        if (score == 99999999999999999) {\n          this.scoreWord = null;\n        } else {\n          this.scoreWord = score;\n        }\n      }); // Picture\n\n      this.getUserScorePicture(this.userID).pipe(take(1) // take only the first value emitted by the observable\n      ).subscribe(score => {\n        this.scorePicture = score;\n\n        if (this.scorePicture < 0) {\n          this.scorePicture = 0;\n        }\n      });\n      this.chartColor = \"#FFFFFF\";\n      this.canvas = document.getElementById(\"chartHours\");\n      this.ctx = this.canvas.getContext(\"2d\");\n      this.chartHours = new Chart(this.ctx, {\n        type: 'line',\n        data: {\n          labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\"],\n          datasets: [{\n            borderColor: \"#6bd098\",\n            backgroundColor: \"#6bd098\",\n            pointRadius: 0,\n            pointHoverRadius: 0,\n            borderWidth: 3,\n            data: [300, 310, 316, 322, 330, 326, 333, 345, 338, 354]\n          }, {\n            borderColor: \"#f17e5d\",\n            backgroundColor: \"#f17e5d\",\n            pointRadius: 0,\n            pointHoverRadius: 0,\n            borderWidth: 3,\n            data: [320, 340, 365, 360, 370, 385, 390, 384, 408, 420]\n          }, {\n            borderColor: \"#fcc468\",\n            backgroundColor: \"#fcc468\",\n            pointRadius: 0,\n            pointHoverRadius: 0,\n            borderWidth: 3,\n            data: [370, 394, 415, 409, 425, 445, 460, 450, 478, 484]\n          }]\n        },\n        options: {\n          legend: {\n            display: false\n          },\n          tooltips: {\n            enabled: false\n          },\n          scales: {\n            yAxes: [{\n              ticks: {\n                fontColor: \"#9f9f9f\",\n                beginAtZero: false,\n                maxTicksLimit: 5 //padding: 20\n\n              },\n              gridLines: {\n                drawBorder: false,\n                zeroLineColor: \"#ccc\",\n                color: 'rgba(255,255,255,0.05)'\n              }\n            }],\n            xAxes: [{\n              barPercentage: 1.6,\n              gridLines: {\n                drawBorder: false,\n                color: 'rgba(255,255,255,0.1)',\n                zeroLineColor: \"transparent\",\n                display: false\n              },\n              ticks: {\n                padding: 20,\n                fontColor: \"#9f9f9f\"\n              }\n            }]\n          }\n        }\n      });\n      this.canvas = document.getElementById(\"chartEmail\");\n      this.ctx = this.canvas.getContext(\"2d\");\n      this.chartEmail = new Chart(this.ctx, {\n        type: 'pie',\n        data: {\n          labels: [1, 2, 3],\n          datasets: [{\n            label: \"Emails\",\n            pointRadius: 0,\n            pointHoverRadius: 0,\n            backgroundColor: ['#e3e3e3', '#4acccd', '#fcc468', '#ef8157'],\n            borderWidth: 0,\n            data: [342, 480, 530, 120]\n          }]\n        },\n        options: {\n          legend: {\n            display: false\n          },\n          pieceLabel: {\n            render: 'percentage',\n            fontColor: ['white'],\n            precision: 2\n          },\n          tooltips: {\n            enabled: false\n          },\n          scales: {\n            yAxes: [{\n              ticks: {\n                display: false\n              },\n              gridLines: {\n                drawBorder: false,\n                zeroLineColor: \"transparent\",\n                color: 'rgba(255,255,255,0.05)'\n              }\n            }],\n            xAxes: [{\n              barPercentage: 1.6,\n              gridLines: {\n                drawBorder: false,\n                color: 'rgba(255,255,255,0.1)',\n                zeroLineColor: \"transparent\"\n              },\n              ticks: {\n                display: false\n              }\n            }]\n          }\n        }\n      });\n      var speedCanvas = document.getElementById(\"speedChart\");\n      var dataFirst = {\n        data: [0, 19, 15, 20, 30, 40, 40, 50, 25, 30, 50, 70],\n        fill: false,\n        borderColor: '#fbc658',\n        backgroundColor: 'transparent',\n        pointBorderColor: '#fbc658',\n        pointRadius: 4,\n        pointHoverRadius: 4,\n        pointBorderWidth: 8\n      };\n      var dataSecond = {\n        data: [0, 5, 10, 12, 20, 27, 30, 34, 42, 45, 55, 63],\n        fill: false,\n        borderColor: '#51CACF',\n        backgroundColor: 'transparent',\n        pointBorderColor: '#51CACF',\n        pointRadius: 4,\n        pointHoverRadius: 4,\n        pointBorderWidth: 8\n      };\n      var speedData = {\n        labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n        datasets: [dataFirst, dataSecond]\n      };\n      var chartOptions = {\n        legend: {\n          display: false,\n          position: 'top'\n        }\n      };\n      var lineChart = new Chart(speedCanvas, {\n        type: 'line',\n        hover: false,\n        data: speedData,\n        options: chartOptions\n      });\n    }\n\n  }\n\n  DashboardComponent.ɵfac = function DashboardComponent_Factory(t) {\n    return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.UserIdService), i0.ɵɵdirectiveInject(i2.HttpClient));\n  };\n\n  DashboardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DashboardComponent,\n    selectors: [[\"dashboard-cmp\"]],\n    decls: 100,\n    vars: 6,\n    consts: [[1, \"row\"], [1, \"col-lg-3\", \"col-md-6\", \"col-sm-6\"], [1, \"card\", \"card-stats\"], [1, \"card-body\"], [1, \"col-5\", \"col-md-4\"], [1, \"icon-big\", \"text-center\", \"icon-warning\"], [1, \"nc-icon\", \"nc-user-run\", \"text-warning\"], [1, \"col-7\", \"col-md-8\"], [1, \"numbers\"], [1, \"card-category\"], [1, \"card-title\"], [1, \"card-footer\"], [1, \"nc-icon\", \"nc-vector\", \"text-danger\"], [1, \"stats\"], [1, \"fa\", \"fa-clock-o\"], [1, \"nc-icon\", \"nc-calendar-60\", \"text-success\"], [\"id\", \"currentDate\", 1, \"card-title\"], [1, \"fa\", \"fa-calendar-o\"], [1, \"nc-icon\", \"nc-favourite-28\", \"text-primary\"], [1, \"col-md-12\"], [1, \"card\"], [1, \"card-header\"], [\"id\", \"chartHours\", \"width\", \"400\", \"height\", \"100\"], [1, \"fa\", \"fa-history\"], [1, \"col-md-4\"]],\n    template: function DashboardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelement(1, \"div\");\n        i0.ɵɵelementStart(2, \"div\", 1)(3, \"div\", 2)(4, \"div\", 3)(5, \"div\", 0)(6, \"div\", 4)(7, \"div\", 5);\n        i0.ɵɵelement(8, \"i\", 6);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"div\", 7)(10, \"div\", 8)(11, \"p\", 9);\n        i0.ɵɵtext(12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"p\", 9);\n        i0.ɵɵtext(14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"p\", 9);\n        i0.ɵɵtext(16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"p\", 9);\n        i0.ɵɵtext(18);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"p\", 9);\n        i0.ɵɵtext(20);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"p\", 9);\n        i0.ɵɵtext(22, \"You have a Streak of\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"p\", 10);\n        i0.ɵɵtext(24, \"4 days \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(25, \"p\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelement(26, \"div\", 11);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(27, \"div\", 1)(28, \"div\", 2)(29, \"div\", 3)(30, \"div\", 0)(31, \"div\", 4)(32, \"div\", 5);\n        i0.ɵɵelement(33, \"i\", 12);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(34, \"div\", 7)(35, \"div\", 8)(36, \"p\", 9);\n        i0.ɵɵtext(37, \"Your Memory Score\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(38, \"p\", 10);\n        i0.ɵɵtext(39, \"23 \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(40, \"p\");\n        i0.ɵɵelementStart(41, \"p\", 9);\n        i0.ɵɵtext(42);\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(43, \"div\", 11);\n        i0.ɵɵelement(44, \"hr\");\n        i0.ɵɵelementStart(45, \"div\", 13);\n        i0.ɵɵelement(46, \"i\", 14);\n        i0.ɵɵtext(47, \" In the last hour \");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(48, \"div\", 1)(49, \"div\", 2)(50, \"div\", 3)(51, \"div\", 0)(52, \"div\", 4)(53, \"div\", 5);\n        i0.ɵɵelement(54, \"i\", 15);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(55, \"div\", 7)(56, \"div\", 8)(57, \"p\", 9);\n        i0.ɵɵtext(58, \"Today is ...\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(59, \"p\", 16);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(60, \"div\", 11);\n        i0.ɵɵelement(61, \"hr\");\n        i0.ɵɵelementStart(62, \"div\", 13);\n        i0.ɵɵelement(63, \"i\", 17);\n        i0.ɵɵtext(64, \" It's a Monday! \");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(65, \"p\");\n        i0.ɵɵtext(66, \" \\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0 \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(67, \"div\", 1)(68, \"div\", 2)(69, \"div\", 3)(70, \"div\", 0)(71, \"div\", 4)(72, \"div\", 5);\n        i0.ɵɵelement(73, \"i\", 18);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(74, \"div\", 7)(75, \"div\", 8)(76, \"p\", 9);\n        i0.ɵɵtext(77, \"Today's Fun Fact\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(78, \"p\", 10);\n        i0.ɵɵtext(79, \" A baby alligator is called a hatchling \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(80, \"p\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelement(81, \"div\", 11);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(82, \"div\", 0)(83, \"div\", 19)(84, \"div\", 20)(85, \"div\", 21)(86, \"h5\", 10);\n        i0.ɵɵtext(87, \"How long have you been on XYZGator?\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(88, \"p\", 9);\n        i0.ɵɵtext(89, \"Let's grow together!\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(90, \"div\", 3);\n        i0.ɵɵelement(91, \"canvas\", 22);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(92, \"div\", 11);\n        i0.ɵɵelement(93, \"hr\");\n        i0.ɵɵelementStart(94, \"div\", 13);\n        i0.ɵɵelement(95, \"i\", 23);\n        i0.ɵɵtext(96, \" Updated 3 minutes ago \");\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(97, \"div\", 0)(98, \"div\", 24);\n        i0.ɵɵelement(99, \"div\", 20);\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(12);\n        i0.ɵɵtextInterpolate1(\"Your ID is: \", ctx.userID, \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"Your memoryScore is: \", ctx.scoreMemory, \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"Your mathScore is: \", ctx.scoreMath, \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"Your wordScore is: \", ctx.scoreWord, \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"Your pictureScore is: \", ctx.scorePicture, \"\");\n        i0.ɵɵadvance(22);\n        i0.ɵɵtextInterpolate1(\"Your memoryScore is: \", ctx.scoreMemory, \"\");\n      }\n    },\n    encapsulation: 2\n  });\n  return DashboardComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}