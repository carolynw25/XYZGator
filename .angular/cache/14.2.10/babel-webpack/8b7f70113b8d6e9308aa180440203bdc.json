{"ast":null,"code":"import _asyncToGenerator from \"/Users/carolynwang/XYZGatorGit/CEN3031Proj/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { TestBed } from '@angular/core/testing';\nimport { HttpClientTestingModule } from '@angular/common/http/testing';\nimport { PictureGuessComponent } from './picture-guess.component';\nimport { UserIdService } from 'app/userIdService';\nimport Swal from 'sweetalert2';\ndescribe('PictureGuessComponent', () => {\n  let component;\n  let fixture;\n  beforeEach( /*#__PURE__*/_asyncToGenerator(function* () {\n    yield TestBed.configureTestingModule({\n      imports: [HttpClientTestingModule],\n      declarations: [PictureGuessComponent],\n      providers: [UserIdService]\n    }).compileComponents();\n    fixture = TestBed.createComponent(PictureGuessComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  }));\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n  it('should initialize correctly', () => {\n    expect(component.pictures.length).toBeGreaterThan(0);\n    expect(component.answers.length).toEqual(47);\n    expect(component.imageNames.length).toBeGreaterThan(0);\n    expect(component.score).toEqual(0);\n    expect(component.highScore).toEqual(0);\n    expect(component.newRecord).toBeFalsy();\n  });\n  it('should load pictures correctly', () => {\n    expect(component.pictures[0].url).toContain('assets/img/pictureGame/');\n  });\n  it('should generate answer choices correctly', () => {\n    expect(component.answers.length).toEqual(47);\n  });\n  it('should select next question correctly', () => {\n    const initialSelection = component.selection;\n    component.nextQuestion();\n    expect(component.selection).not.toEqual(initialSelection);\n  });\n  it('should check answer correctly', () => {\n    spyOn(Swal, 'fire').and.callFake(() => Promise.resolve({\n      isConfirmed: true\n    }));\n    spyOn(component, 'nextQuestion');\n    component.checkAnswer(component.answers[0]);\n    expect(component.score).toBeGreaterThan(0);\n    expect(Swal.fire).toHaveBeenCalled();\n    expect(component.nextQuestion).toHaveBeenCalled();\n  });\n});","map":{"version":3,"mappings":"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","names":["TestBed","HttpClientTestingModule","PictureGuessComponent","UserIdService","Swal","describe","component","fixture","beforeEach","configureTestingModule","imports","declarations","providers","compileComponents","createComponent","componentInstance","detectChanges","it","expect","toBeTruthy","pictures","length","toBeGreaterThan","answers","toEqual","imageNames","score","highScore","newRecord","toBeFalsy","url","toContain","initialSelection","selection","nextQuestion","not","spyOn","and","callFake","Promise","resolve","isConfirmed","checkAnswer","fire","toHaveBeenCalled"],"sourceRoot":"","sources":["/Users/carolynwang/XYZGatorGit/CEN3031Proj/src/app/picture-guess/picture-guess.component.spec.ts"],"sourcesContent":["import { ComponentFixture, TestBed } from '@angular/core/testing';\nimport { HttpClientTestingModule } from '@angular/common/http/testing';\nimport { PictureGuessComponent } from './picture-guess.component';\nimport { UserIdService } from 'app/userIdService';\nimport { HttpClient } from '@angular/common/http';\nimport { of } from 'rxjs';\nimport Swal from 'sweetalert2';\n\n\ndescribe('PictureGuessComponent', () => {\n  let component: PictureGuessComponent;\n  let fixture: ComponentFixture<PictureGuessComponent>;\n\n  beforeEach(async () => {\n    await TestBed.configureTestingModule({\n      imports: [HttpClientTestingModule],\n      declarations: [ PictureGuessComponent ],\n      providers: [UserIdService]\n    })\n    .compileComponents();\n\n    fixture = TestBed.createComponent(PictureGuessComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n\n  it('should initialize correctly', () => {\n    expect(component.pictures.length).toBeGreaterThan(0);\n    expect(component.answers.length).toEqual(47);\n    expect(component.imageNames.length).toBeGreaterThan(0);\n    expect(component.score).toEqual(0);\n    expect(component.highScore).toEqual(0);\n    expect(component.newRecord).toBeFalsy();\n  });\n\n  it('should load pictures correctly', () => {\n    expect(component.pictures[0].url).toContain('assets/img/pictureGame/');\n  });\n\n  it('should generate answer choices correctly', () => {\n    expect(component.answers.length).toEqual(47);\n  });\n\n  it('should select next question correctly', () => {\n    const initialSelection = component.selection;\n    component.nextQuestion();\n    expect(component.selection).not.toEqual(initialSelection);\n  });\n\n  it('should check answer correctly', () => {\n    spyOn(Swal, 'fire').and.callFake(() => Promise.resolve({ isConfirmed: true }));\n    spyOn(component, 'nextQuestion');\n    component.checkAnswer(component.answers[0]);\n    expect(component.score).toBeGreaterThan(0);\n    expect(Swal.fire).toHaveBeenCalled();\n    expect(component.nextQuestion).toHaveBeenCalled();\n  });\n  \n});\n"]},"metadata":{},"sourceType":"module"}