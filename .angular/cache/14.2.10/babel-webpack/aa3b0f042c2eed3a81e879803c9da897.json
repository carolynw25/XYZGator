{"ast":null,"code":"import { ToastrService } from \"ngx-toastr\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-toastr\";\nimport * as i2 from \"@angular/router\";\nexport let NotificationsComponent = /*#__PURE__*/(() => {\n  class NotificationsComponent {\n    constructor(toastr) {\n      this.toastr = toastr;\n    }\n\n    showNotification(from, align) {\n      const color = Math.floor(Math.random() * 5 + 1);\n\n      switch (color) {\n        case 1:\n          this.toastr.info('<span data-notify=\"icon\" class=\"nc-icon nc-bell-55\"></span><span data-notify=\"message\">Welcome to <b>Paper Dashboard Angular</b> - a beautiful bootstrap dashboard for every web developer.</span>', \"\", {\n            timeOut: 4000,\n            closeButton: true,\n            enableHtml: true,\n            toastClass: \"alert alert-info alert-with-icon\",\n            positionClass: \"toast-\" + from + \"-\" + align\n          });\n          break;\n\n        case 2:\n          this.toastr.success('<span data-notify=\"icon\" class=\"nc-icon nc-bell-55\"></span><span data-notify=\"message\">Welcome to <b>Paper Dashboard Angular</b> - a beautiful bootstrap dashboard for every web developer.</span>', \"\", {\n            timeOut: 4000,\n            closeButton: true,\n            enableHtml: true,\n            toastClass: \"alert alert-success alert-with-icon\",\n            positionClass: \"toast-\" + from + \"-\" + align\n          });\n          break;\n\n        case 3:\n          this.toastr.warning('<span data-notify=\"icon\" class=\"nc-icon nc-bell-55\"></span><span data-notify=\"message\">Welcome to <b>Paper Dashboard Angular</b> - a beautiful bootstrap dashboard for every web developer.</span>', \"\", {\n            timeOut: 4000,\n            closeButton: true,\n            enableHtml: true,\n            toastClass: \"alert alert-warning alert-with-icon\",\n            positionClass: \"toast-\" + from + \"-\" + align\n          });\n          break;\n\n        case 4:\n          this.toastr.error('<span data-notify=\"icon\" class=\"nc-icon nc-bell-55\"></span><span data-notify=\"message\">Welcome to <b>Paper Dashboard Angular</b> - a beautiful bootstrap dashboard for every web developer.</span>', \"\", {\n            timeOut: 4000,\n            enableHtml: true,\n            closeButton: true,\n            toastClass: \"alert alert-danger alert-with-icon\",\n            positionClass: \"toast-\" + from + \"-\" + align\n          });\n          break;\n\n        case 5:\n          this.toastr.show('<span data-notify=\"icon\" class=\"nc-icon nc-bell-55\"></span><span data-notify=\"message\">Welcome to <b>Paper Dashboard Angular</b> - a beautiful bootstrap dashboard for every web developer.</span>', \"\", {\n            timeOut: 4000,\n            closeButton: true,\n            enableHtml: true,\n            toastClass: \"alert alert-primary alert-with-icon\",\n            positionClass: \"toast-\" + from + \"-\" + align\n          });\n          break;\n\n        default:\n          break;\n      }\n    }\n\n  }\n\n  NotificationsComponent.ɵfac = function NotificationsComponent_Factory(t) {\n    return new (t || NotificationsComponent)(i0.ɵɵdirectiveInject(i1.ToastrService));\n  };\n\n  NotificationsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NotificationsComponent,\n    selectors: [[\"notifications-cmp\"]],\n    decls: 36,\n    vars: 0,\n    consts: [[1, \"row\"], [1, \"col-md-12\"], [1, \"card\"], [1, \"card-body\"], [1, \"places-buttons\"], [1, \"col-md-6\", \"ml-auto\", \"mr-auto\", \"text-center\"], [1, \"card-title\"], [1, \"category\"], [1, \"col-lg-8\", \"ml-auto\", \"mr-auto\"], [1, \"\"], [\"routerLink\", \"/game1\", 1, \"btn\", \"btn-primary\", \"btn-block\", 2, \"margin\", \"0\"], [2, \"border\", \"1px solid rgb(92, 237, 235)\", \"background-color\", \"rgb(231, 236, 255)\", \"padding\", \"10px\", \"margin-top\", \"0\"], [\"routerLink\", \"/game2\", 1, \"btn\", \"btn-primary\", \"btn-block\", 2, \"margin\", \"0\"], [\"routerLink\", \"/game3\", 1, \"btn\", \"btn-primary\", \"btn-block\", 2, \"margin\", \"0\"]],\n    template: function NotificationsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 0)(6, \"div\", 5)(7, \"h4\", 6);\n        i0.ɵɵtext(8, \" Game selection \");\n        i0.ɵɵelement(9, \"p\", 7);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(10, \"div\", 0)(11, \"div\", 8)(12, \"div\", 0)(13, \"div\", 9)(14, \"button\", 10);\n        i0.ɵɵtext(15, \"Memory Game\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"p\", 11);\n        i0.ɵɵtext(17, \"There are matching cards and you need to flip/click on them to see their color. The goal is to match the same color cards as quick as possible.\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(18, \"div\", 9)(19, \"button\", 12);\n        i0.ɵɵtext(20, \"Speed Math Game\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"p\", 11);\n        i0.ɵɵtext(22, \"You are given a math problem and you have to press the square containing the solution. You have 1 minute to get as many questions right as possible.\");\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(23, \"div\", 0)(24, \"div\", 8)(25, \"div\", 0)(26, \"div\", 9)(27, \"button\", 13);\n        i0.ɵɵtext(28, \"Word Search\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"p\", 11);\n        i0.ɵɵtext(30, \"You will be given 5 words to search for in a board full of letters. When you find a word, highlight it by pressing one time at the starting letter and one time at the end letter. The goal is to highligh all the words as quick as possible.\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(31, \"div\", 9)(32, \"button\", 13);\n        i0.ɵɵtext(33, \"Picture Guess\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"p\", 11);\n        i0.ɵɵtext(35, \"Guess as many pictures in 40 seconds.\");\n        i0.ɵɵelementEnd()()()()()()()()()();\n      }\n    },\n    dependencies: [i2.RouterLink],\n    encapsulation: 2\n  });\n  return NotificationsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}